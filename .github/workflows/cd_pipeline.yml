name: CD Pipeline

on:
  push:
    tags:
      - 'v*.*.*'  # Pipeline uruchamia się dla tagów w formacie vX.X.X

permissions:
  contents: write

jobs:
  build:
    name: Build and Publish Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Extract version from tag
        run: |
          echo "PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Debug version
        run: |
          echo "Package version is: ${{ env.PACKAGE_VERSION }}"

      - name: Clean dist directory
        run: |
          rm -rf dist/

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        env:
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
        run: |
          python -m build

      - name: Publish to Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/* --verbose

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Automatically generated release by the CI/CD pipeline.